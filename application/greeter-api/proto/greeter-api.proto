syntax = "proto3";

package greeter_api;

option go_package = "github.com/imind-lab/greeter-api/application/greeter-api/proto;greeter_api";

import "google/api/annotations.proto";

service GreeterService {
    rpc CreateGreeter (CreateGreeterRequest) returns (CreateGreeterResponse) {
        option (google.api.http) = {
           post: "/v1/greeter/create"
           body: "*"
        };
    }
    rpc GetGreeterById (GetGreeterByIdRequest) returns (GetGreeterByIdResponse) {
        option (google.api.http) = {
           get: "/v1/greeter/one/{id}"
        };
    }
    rpc GetGreeterList (GetGreeterListRequest) returns (GetGreeterListResponse) {
        option (google.api.http) = {
           get: "/v1/greeter/list/{status}"
        };
    }
    rpc UpdateGreeterStatus (UpdateGreeterStatusRequest) returns (UpdateGreeterStatusResponse) {
        option (google.api.http) = {
           post: "/v1/greeter/status"
           body: "*"
        };
    }
    rpc UpdateGreeterCount (UpdateGreeterCountRequest) returns (UpdateGreeterCountResponse) {
        option (google.api.http) = {
           post: "/v1/greeter/count"
           body: "*"
        };
    }
    rpc DeleteGreeterById (DeleteGreeterByIdRequest) returns (DeleteGreeterByIdResponse) {
        option (google.api.http) = {
           post: "/v1/greeter/del"
           body: "*"
        };
    }

    rpc GetGreeterListByIds (GetGreeterListByIdsRequest) returns (GetGreeterListByIdsResponse) {
        option (google.api.http) = {
           post: "/v1/greeter/ids"
           body: "*"
        };
    }
}

message CreateGreeterRequest {
    // @inject_tag: validate:"required"
    Greeter dto = 1;
}

message CreateGreeterResponse {
    Error error = 1;
}

message GetGreeterByIdRequest {
    int32 id = 1;
}

message GetGreeterByIdResponse {
    Error error = 1;
    Greeter dto = 2;
}

message GetGreeterListRequest {
    // @inject_tag: validate:"gte=0,lte=3"
    int32 status = 1;
    int32 lastid = 2;
    // @inject_tag: validate:"gte=5,lte=20"
    int32 pagesize = 3;
    int32 page = 4;
}

message GetGreeterListResponse {
    Error error = 1;
    GreeterList data = 2;
}

message UpdateGreeterStatusRequest {
    int32 id = 1;
    int32 status = 2;
}

message UpdateGreeterStatusResponse {
    Error error = 1;
}

message UpdateGreeterCountRequest {
    int32 id = 1;
    int32 num = 2;
    string column = 3;
}

message UpdateGreeterCountResponse {
    Error error = 1;
}

message DeleteGreeterByIdRequest {
    int32 id = 1;
}

message DeleteGreeterByIdResponse {
    Error error = 1;
}

message Greeter {
    int32 id = 1;
    // @inject_tag: validate:"required,email"
    string name = 2;
    int32 view_num = 3;
    // @inject_tag: validate:"gte=0,lte=3"
    int32 status = 4;
    int64 create_time = 5;
    string create_datetime = 6;
    string update_datetime = 7;
}

message GreeterList {
    int32 total = 1;
    int32 total_page = 2;
    int32 cur_page = 3;
    repeated Greeter datalist = 4;
}

message GetGreeterListByIdsRequest {
    repeated int32 ids = 1;
}

message GetGreeterListByIdsResponse {
    Error error = 1;
    repeated Greeter data = 2;
}

message Error {
    int32 code = 1;
    string message = 2;
}
